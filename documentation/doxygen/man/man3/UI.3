.TH "UI" 3 "Mon Jun 23 2014" "Version 0.1" "Social Bot Interface" \" -*- nroff -*-
.ad l
.nh
.SH NAME
UI \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <UI\&.h>\fP
.PP
Inherits QObject\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBUI\fP ()"
.br
.ti -1c
.RI "\fB~UI\fP ()"
.br
.ti -1c
.RI "QString \fBApplicationVersion\fP (uint8_t version_format=0) const "
.br
.ti -1c
.RI "bool \fBCreateDefaultWindows\fP ()"
.br
.ti -1c
.RI "bool \fBGetWindowParameters\fP (int &\fBx\fP, int &\fBy\fP, int &w, int &h) const "
.br
.ti -1c
.RI "bool \fBLoadConfig\fP (const char *path)"
.br
.ti -1c
.RI "void \fBRun\fP () const "
.br
.ti -1c
.RI "void \fBSetupSignals\fP ()"
.br
.ti -1c
.RI "void \fBShow\fP (bool enabled=true)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint32_t \fBflags\fP"
.br
.ti -1c
.RI "   struct {"
.br
.ti -1c
.RI "      uint32_t \fBheight\fP"
.br
.ti -1c
.RI "      uint32_t \fBwidth\fP"
.br
.ti -1c
.RI "      int32_t \fBx\fP"
.br
.ti -1c
.RI "      int32_t \fBy\fP"
.br
.ti -1c
.RI "      std::string \fBtitle\fP"
.br
.ti -1c
.RI "   } \fBmain_window\fP"
.br
.ti -1c
.RI "   uint16_t \fBdialog_opacity\fP"
.br
.ti -1c
.RI "   struct {"
.br
.ti -1c
.RI "      uint32_t \fBlocations_size\fP"
.br
.ti -1c
.RI "      uint32_t \fBoutput_size\fP"
.br
.ti -1c
.RI "      uint32_t \fBusers_size\fP"
.br
.ti -1c
.RI "   } \fBtree_layout\fP"
.br
.ti -1c
.RI "} \fBui\fP"
.br
.in -1c
.SS "Private Slots"

.in +1c
.ti -1c
.RI "void \fBAbout\fP () const "
.br
.ti -1c
.RI "void \fBAboutQt\fP () const "
.br
.ti -1c
.RI "void \fBOpenInterfacesLoadDialog\fP () const "
.br
.ti -1c
.RI "void \fBOpenInterfacesUnloadDialog\fP () const "
.br
.ti -1c
.RI "void \fBOpenModulesLoadDialog\fP () const "
.br
.ti -1c
.RI "void \fBOpenModulesUnloadDialog\fP () const "
.br
.ti -1c
.RI "void \fBQuit\fP () const "
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "\fBNO_CLASS_ASSIGNMENT\fP (\fBUI\fP)"
.br
.ti -1c
.RI "\fBNO_CLASS_COPY\fP (\fBUI\fP)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "QApplication * \fB_app\fP"
.br
.ti -1c
.RI "QMainWindow * \fB_wnd\fP"
.br
.ti -1c
.RI "Ui_MainWindow * \fB_base\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 40 of file UI\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "UI::UI ()"

.SS "UI::~UI ()"

.SH "Member Function Documentation"
.PP 
.SS "void UI::About () const\fC [private]\fP, \fC [slot]\fP"
Displays the 'About' dialog for the application\&. 
.SS "void UI::AboutQt () const\fC [private]\fP, \fC [slot]\fP"
Displays the 'About' dialog for the version of Qt being used\&. 
.SS "QString UI::ApplicationVersion (uint8_tversion_format = \fC0\fP) const"
Acquires the version information for the application 
.PP
Referenced by AboutDialog::SetModel()\&.
.SS "bool UI::CreateDefaultWindows ()"
Creates the windows show for the initial user interface, containing the application window, menu and status bars\&.
.PP
\fBReturns:\fP
.RS 4
Returns true if everything is created without fault, otherwise false is returned 
.RE
.PP

.SS "bool UI::GetWindowParameters (int &x, int &y, int &w, int &h) const"
Queries the main application window for its size and position, then stores the results in the supplied references\&.
.PP
\fBParameters:\fP
.RS 4
\fIx\fP The reference to store the windows x position in 
.br
\fIy\fP The reference to store the windows y position in 
.br
\fIw\fP The reference to store the windows width in 
.br
\fIh\fP The reference to store the windows height in 
.RE
.PP
\fBReturns:\fP
.RS 4
Returns false if the window information cannot be required, in which case the supplied parameters are not modified; otherwise, this function returns true 
.RE
.PP

.SS "bool UI::LoadConfig (const char *path)"

.SS "UI::NO_CLASS_ASSIGNMENT (\fBUI\fP)\fC [private]\fP"

.SS "UI::NO_CLASS_COPY (\fBUI\fP)\fC [private]\fP"

.SS "void UI::OpenInterfacesLoadDialog () const\fC [private]\fP, \fC [slot]\fP"

.SS "void UI::OpenInterfacesUnloadDialog () const\fC [private]\fP, \fC [slot]\fP"

.SS "void UI::OpenModulesLoadDialog () const\fC [private]\fP, \fC [slot]\fP"

.SS "void UI::OpenModulesUnloadDialog () const\fC [private]\fP, \fC [slot]\fP"

.SS "void UI::Quit () const\fC [private]\fP, \fC [slot]\fP"
Quits the application\&. 
.SS "void UI::Run () const"
Actually runs the ui handler; in this case, the qt application\&. 
.SS "void UI::SetupSignals ()"

.SS "void UI::Show (boolenabled = \fCtrue\fP)"
Shows or hides the main window; allows the default creation mechanisms to complete fully before showing the main window, otherwise components are added while it is shown, and may cause noticeable defects\&.
.PP
\fBParameters:\fP
.RS 4
\fIenabled\fP (Optional) If true, shows the window; false hides it\&. 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIEC_Abnormal\fP if the class member pointer _wnd is nullptr 
.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "QApplication* UI::_app\fC [private]\fP"
Core Qt application 
.PP
Definition at line 52 of file UI\&.h\&.
.SS "Ui_MainWindow* UI::_base\fC [private]\fP"
The 'interfaceable' main window 
.PP
Definition at line 59 of file UI\&.h\&.
.SS "QMainWindow* UI::_wnd\fC [private]\fP"
the primary window 
.PP
Definition at line 53 of file UI\&.h\&.
.SS "uint16_t UI::dialog_opacity"

.PP
Definition at line 157 of file UI\&.h\&.
.SS "uint32_t UI::flags"

.PP
Definition at line 147 of file UI\&.h\&.
.SS "uint32_t UI::height"

.PP
Definition at line 150 of file UI\&.h\&.
.SS "uint32_t UI::locations_size"

.PP
Definition at line 160 of file UI\&.h\&.
.SS "struct { \&.\&.\&. }   UI::main_window"

.SS "uint32_t UI::output_size"

.PP
Definition at line 161 of file UI\&.h\&.
.SS "std::string UI::title"

.PP
Definition at line 154 of file UI\&.h\&.
.SS "struct { \&.\&.\&. }   UI::tree_layout"

.SS "struct { \&.\&.\&. }   UI::ui"

.SS "uint32_t UI::users_size"

.PP
Definition at line 162 of file UI\&.h\&.
.SS "uint32_t UI::width"

.PP
Definition at line 151 of file UI\&.h\&.
.SS "int32_t UI::x"

.PP
Definition at line 152 of file UI\&.h\&.
.SS "int32_t UI::y"

.PP
Definition at line 153 of file UI\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Social Bot Interface from the source code\&.
