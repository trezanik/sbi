.TH "config_network" 3 "Mon Jun 23 2014" "Version 0.1" "Social Bot Interface" \" -*- nroff -*-
.ad l
.nh
.SH NAME
config_network \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <config_structs\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBconfig_network\fP \fBoperator=\fP (\fBconfig_network\fP *network)"
.br
.ti -1c
.RI "\fBconfig_network\fP \fBoperator=\fP (\fBconfig_network\fP *network)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "std::string \fBnetwork_name\fP"
.br
.ti -1c
.RI "std::string \fBprofile_name\fP"
.br
.ti -1c
.RI "std::string \fBencoding\fP"
.br
.ti -1c
.RI "bool \fBallow_invalid_cert\fP"
.br
.ti -1c
.RI "bool \fBauto_connect\fP"
.br
.ti -1c
.RI "bool \fBauto_exec_commands\fP"
.br
.ti -1c
.RI "bool \fBauto_join_channels\fP"
.br
.ti -1c
.RI "std::vector< std::string > \fBchannels\fP"
.br
.ti -1c
.RI "std::vector< std::string > \fBcommands\fP"
.br
.ti -1c
.RI "std::vector< std::shared_ptr
.br
< \fBconfig_server\fP > > \fBservers\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Holds the configuration for an IRC network\&. Note that the autojoin channels that contain keys have it as part of the string (since this matches the send format, we can use this to save complexity)\&.
.PP
Must reside within a std::shared_ptr\&. 
.PP
Definition at line 88 of file config_structs\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBconfig_network\fP config_network::operator= (\fBconfig_network\fP *network)\fC [inline]\fP"

.PP
Definition at line 103 of file config_structs\&.h\&.
.PP
References allow_invalid_cert, auto_connect, auto_exec_commands, auto_join_channels, channels, commands, encoding, network_name, profile_name, and servers\&.
.PP
.nf
104         {
105                 network_name            = network->network_name;
106                 profile_name            = network->profile_name;
107                 encoding                = network->encoding;
108                 allow_invalid_cert      = network->allow_invalid_cert;
109                 auto_connect            = network->auto_connect;
110                 auto_exec_commands      = network->auto_exec_commands;
111                 auto_join_channels      = network->auto_join_channels;
112                 for ( auto c : network->channels )
113                         channels\&.push_back(c);
114                 for ( auto c : network->commands )
115                         commands\&.push_back(c);
116                 for ( auto c : network->servers )
117                         servers\&.push_back(c);
118                 return *this;
119         }
.fi
.SS "\fBconfig_network\fP config_network::operator= (\fBconfig_network\fP *network)\fC [inline]\fP"

.PP
Definition at line 103 of file bak/config_structs\&.h\&.
.PP
References allow_invalid_cert, auto_connect, auto_exec_commands, auto_join_channels, channels, commands, encoding, network_name, profile_name, and servers\&.
.PP
.nf
104         {
105                 network_name            = network->network_name;
106                 profile_name            = network->profile_name;
107                 encoding                = network->encoding;
108                 allow_invalid_cert      = network->allow_invalid_cert;
109                 auto_connect            = network->auto_connect;
110                 auto_exec_commands      = network->auto_exec_commands;
111                 auto_join_channels      = network->auto_join_channels;
112                 for ( auto c : network->channels )
113                         channels\&.push_back(c);
114                 for ( auto c : network->commands )
115                         commands\&.push_back(c);
116                 for ( auto c : network->servers )
117                         servers\&.push_back(c);
118                 return *this;
119         }
.fi
.SH "Member Data Documentation"
.PP 
.SS "bool config_network::allow_invalid_cert"

.PP
Definition at line 93 of file config_structs\&.h\&.
.PP
Referenced by operator=(), IrcNetwork::Setup(), and IrcConnection::Setup()\&.
.SS "bool config_network::auto_connect"

.PP
Definition at line 94 of file config_structs\&.h\&.
.PP
Referenced by operator=(), and IrcNetwork::Setup()\&.
.SS "bool config_network::auto_exec_commands"

.PP
Definition at line 95 of file config_structs\&.h\&.
.PP
Referenced by IrcParser::HandleNotice(), operator=(), and IrcNetwork::Setup()\&.
.SS "bool config_network::auto_join_channels"

.PP
Definition at line 96 of file config_structs\&.h\&.
.PP
Referenced by IrcParser::HandleNotice(), operator=(), and IrcNetwork::Setup()\&.
.SS "std::vector< std::string > config_network::channels"

.PP
Definition at line 97 of file config_structs\&.h\&.
.PP
Referenced by IrcParser::HandleNotice(), operator=(), and IrcNetwork::Setup()\&.
.SS "std::vector< std::string > config_network::commands"

.PP
Definition at line 98 of file config_structs\&.h\&.
.PP
Referenced by IrcParser::HandleNotice(), operator=(), and IrcNetwork::Setup()\&.
.SS "std::string config_network::encoding"

.PP
Definition at line 92 of file config_structs\&.h\&.
.PP
Referenced by operator=()\&.
.SS "std::string config_network::network_name"

.PP
Definition at line 90 of file config_structs\&.h\&.
.PP
Referenced by operator=(), and IrcNetwork::Setup()\&.
.SS "std::string config_network::profile_name"

.PP
Definition at line 91 of file config_structs\&.h\&.
.PP
Referenced by operator=(), and IrcNetwork::Setup()\&.
.SS "std::vector< std::shared_ptr< \fBconfig_server\fP > > config_network::servers"

.PP
Definition at line 100 of file config_structs\&.h\&.
.PP
Referenced by operator=(), and IrcNetwork::Setup()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Social Bot Interface from the source code\&.
