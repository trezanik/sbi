.TH "win32.cc" 3 "Mon Jun 23 2014" "Version 0.1" "Social Bot Interface" \" -*- nroff -*-
.ad l
.nh
.SH NAME
win32.cc \- 
.SH SYNOPSIS
.br
.PP
\fC#include <Windows\&.h>\fP
.br
\fC#include 'IrcEngine\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "BOOL WINAPI \fBDllMain\fP (HINSTANCE dll_instance, unsigned long reason, LPVOID context)"
.br
.ti -1c
.RI "void * \fBinstance\fP (void *params)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "BOOL WINAPI DllMain (HINSTANCEdll_instance, unsigned longreason, LPVOIDcontext)"

.PP
Definition at line 23 of file bak/win32\&.cc\&.
.PP
References APP_NAMESPACE\&.
.PP
.nf
28 {
29         // since DllMain can't be within a namespace\&.\&.
30         using namespace APP_NAMESPACE;
31 
32         dll_instance;
33 
34         if ( reason == DLL_PROCESS_ATTACH )
35         {
36                 // Disable DllMain calls for DLL_THREAD_*
37                 //DisableThreadLibraryCalls(module_handle);
38 
39                 if ( context == NULL )
40                 {
41                         // dynamic load
42 
43                         /* create an instance of the IRC engine for when 
44                          * demanded after this point\&. */
45                         //g_irc_engine\&.AttachListener();
46                         
47                         // Return FALSE if you don't want your module to be dynamically loaded
48                 }
49                 else
50                 {
51                         // static load
52                         // Return FALSE if you don't want your module to be statically loaded
53                         return false;
54                 }
55         }
56         else if ( reason == DLL_PROCESS_DETACH )
57         {
58                 if ( context == NULL ) 
59                 {
60                         // Either loading the DLL has failed or FreeLibrary was called
61 
62                         // Cleanup
63                 }
64                 else
65                 {
66                         // Process is terminating
67 
68                         // Cleanup
69                 }
70         }
71 
72         return true;
73 }
.fi
.SS "void* instance (void *params)"
Returns a pointer to the interface instance\&. Return type must be void as the api/runtime cannot know what object the instance will be, since it's compiled with no knowledge of the interface\&.
.PP
\fBWarning:\fP
.RS 4
Assumes \fBspawn_interface()\fP has been called before now as part of the loading procedure, which creates the object this refers to\&. Third-party interfaces can do this however they want, but is useful to know what to expect\&. 
.RE
.PP

.PP
Definition at line 79 of file bak/win32\&.cc\&.
.PP
References APP_NAMESPACE, and irc_engine\&.
.PP
.nf
82 {
83         using namespace APP_NAMESPACE;
84         
85         UNREFERENCED_PARAMETER(params);
86 
87         // not created until this function is first called
88         static IrcEngine        irc_engine;
89 
90         return &irc_engine;
91 }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for Social Bot Interface from the source code\&.
