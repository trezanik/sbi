.TH "IrcPool" 3 "Mon Jun 23 2014" "Version 0.1" "Social Bot Interface" \" -*- nroff -*-
.ad l
.nh
.SH NAME
IrcPool \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <IrcPool\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fB~IrcPool\fP ()"
.br
.ti -1c
.RI "\fBObjectPool\fP< \fBIrcChannel\fP > *const \fBIrcChannels\fP ()"
.br
.ti -1c
.RI "\fBObjectPool\fP< \fBIrcConnection\fP > *const \fBIrcConnections\fP ()"
.br
.ti -1c
.RI "\fBObjectPool\fP< \fBIrcNetwork\fP > *const \fBIrcNetworks\fP ()"
.br
.ti -1c
.RI "\fBObjectPool\fP< \fBIrcUser\fP > *const \fBIrcUsers\fP ()"
.br
.ti -1c
.RI "std::shared_ptr< \fBIrcChannel\fP > \fBGetChannel\fP (const uint32_t connection_id, const char *channel_name)"
.br
.ti -1c
.RI "std::shared_ptr< \fBIrcConnection\fP > \fBGetConnection\fP (const uint32_t connection_id)"
.br
.ti -1c
.RI "std::shared_ptr< \fBIrcNetwork\fP > \fBGetNetwork\fP (const char *network_name)"
.br
.ti -1c
.RI "std::shared_ptr< \fBIrcUser\fP > \fBGetUser\fP (const uint32_t connection_id, const char *channel_name, const char *user_name)"
.br
.ti -1c
.RI "\fB~IrcPool\fP ()"
.br
.ti -1c
.RI "\fBObjectPool\fP< \fBIrcChannel\fP > * \fBIrcChannels\fP ()"
.br
.ti -1c
.RI "\fBObjectPool\fP< \fBIrcConnection\fP > * \fBIrcConnections\fP ()"
.br
.ti -1c
.RI "\fBObjectPool\fP< \fBIrcNetwork\fP > * \fBIrcNetworks\fP ()"
.br
.ti -1c
.RI "\fBObjectPool\fP< \fBIrcUser\fP > * \fBIrcUsers\fP ()"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "\fBNO_CLASS_ASSIGNMENT\fP (\fBIrcPool\fP)"
.br
.ti -1c
.RI "\fBNO_CLASS_COPY\fP (\fBIrcPool\fP)"
.br
.ti -1c
.RI "\fBIrcPool\fP ()"
.br
.ti -1c
.RI "\fBNO_CLASS_ASSIGNMENT\fP (\fBIrcPool\fP)"
.br
.ti -1c
.RI "\fBNO_CLASS_COPY\fP (\fBIrcPool\fP)"
.br
.ti -1c
.RI "\fBIrcPool\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBObjectPool\fP< \fBIrcUser\fP > \fB_users\fP"
.br
.ti -1c
.RI "\fBObjectPool\fP< \fBIrcChannel\fP > \fB_channels\fP"
.br
.ti -1c
.RI "\fBObjectPool\fP< \fBIrcConnection\fP > \fB_connections\fP"
.br
.ti -1c
.RI "\fBObjectPool\fP< \fBIrcNetwork\fP > \fB_networks\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBIrcEngine\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 445 of file IrcPool\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "IrcPool::IrcPool ()\fC [private]\fP"

.PP
Definition at line 16 of file IrcPool\&.cc\&.
.PP
.nf
17 {
18 }
.fi
.SS "IrcPool::~IrcPool ()"

.PP
Definition at line 22 of file IrcPool\&.cc\&.
.PP
.nf
23 {
24 }
.fi
.SS "IrcPool::IrcPool ()\fC [private]\fP"

.SS "IrcPool::~IrcPool ()"

.SH "Member Function Documentation"
.PP 
.SS "std::shared_ptr< \fBIrcChannel\fP > IrcPool::GetChannel (const uint32_tconnection_id, const char *channel_name)"

.PP
Definition at line 29 of file IrcPool\&.cc\&.
.PP
References _channels, and ObjectPool< T >::Allocated()\&.
.PP
Referenced by IrcConnection::DeleteChannel(), and IrcConnection::GetChannel()\&.
.PP
.nf
33 {
34         if ( connection_id == 0 )
35                 return nullptr;
36         if ( channel_name == nullptr )
37                 return nullptr;
38 
39         for ( auto c : _channels\&.Allocated() )
40         {
41                 if ( c->Name()\&.compare(channel_name) == 0 )
42                 {
43                         if ( c->Owner()->Id() == connection_id )
44                         {
45                                 return c;
46                         }
47                 }
48         }
49 
50         return nullptr;
51 }
.fi
.SS "std::shared_ptr< \fBIrcConnection\fP > IrcPool::GetConnection (const uint32_tconnection_id)"

.PP
Definition at line 56 of file IrcPool\&.cc\&.
.PP
References _connections, and ObjectPool< T >::Allocated()\&.
.PP
Referenced by IrcConnection::AddChannel(), and IrcConnection::EstablishConnection()\&.
.PP
.nf
59 {
60         if ( connection_id == 0 )
61                 return nullptr;
62 
63         for ( auto c : _connections\&.Allocated() )
64         {
65                 if ( c->Id() == connection_id )
66                 {
67                         return c;
68                 }
69         }
70 
71         return nullptr;
72 }
.fi
.SS "std::shared_ptr< \fBIrcNetwork\fP > IrcPool::GetNetwork (const char *network_name)"

.PP
Definition at line 77 of file IrcPool\&.cc\&.
.PP
References _networks, and ObjectPool< T >::Allocated()\&.
.PP
.nf
80 {
81         if ( name == nullptr )
82                 return nullptr;
83 
84         for ( auto n : _networks\&.Allocated() )
85         {
86                 if ( n->Name()\&.compare(name) == 0 )
87                 {
88                         return n;
89                 }
90         }
91 
92         return nullptr;
93 }
.fi
.SS "std::shared_ptr< \fBIrcUser\fP > IrcPool::GetUser (const uint32_tconnection_id, const char *channel_name, const char *user_name)"

.PP
Definition at line 98 of file IrcPool\&.cc\&.
.PP
References _users, and ObjectPool< T >::Allocated()\&.
.PP
Referenced by IrcChannel::AddNamesUser(), and IrcChannel::GetUser()\&.
.PP
.nf
103 {
104         if ( connection_id == 0 )
105                 return nullptr;
106         if ( channel_name == nullptr )
107                 return nullptr;
108         if ( nickname == nullptr )
109                 return nullptr;
110 
111         for ( auto u : _users\&.Allocated() )
112         {
113                 if ( u->Nickname()\&.compare(nickname) == 0 )
114                 {
115                         if ( u->Owner()->Name()\&.compare(channel_name) == 0 )
116                         {
117                                 if ( u->Owner()->Owner()->Id() == connection_id )
118                                 {
119                                         return u;
120                                 }
121                         }
122                 }
123         }
124 
125         return nullptr;
126 }
.fi
.SS "\fBObjectPool\fP<\fBIrcChannel\fP>* IrcPool::IrcChannels ()\fC [inline]\fP"

.PP
Definition at line 460 of file bak/IrcPool\&.h\&.
.PP
References _channels\&.
.PP
.nf
461         { return &_channels; }
.fi
.SS "\fBObjectPool\fP<\fBIrcChannel\fP>* const IrcPool::IrcChannels ()\fC [inline]\fP"

.PP
Definition at line 467 of file IrcPool\&.h\&.
.PP
References _channels\&.
.PP
Referenced by IrcFactory::CreateIrcChannel(), IrcConnection::DeleteChannel(), IrcFactory::DeleteIrcObject(), IrcConnection::EraseChannelList(), and IrcParser::HandleQuit()\&.
.PP
.nf
468         { 
469                 return &_channels;
470         }
.fi
.SS "\fBObjectPool\fP<\fBIrcConnection\fP>* IrcPool::IrcConnections ()\fC [inline]\fP"

.PP
Definition at line 462 of file bak/IrcPool\&.h\&.
.PP
References _connections\&.
.PP
.nf
463         { return &_connections; }
.fi
.SS "\fBObjectPool\fP<\fBIrcConnection\fP>* const IrcPool::IrcConnections ()\fC [inline]\fP"

.PP
Definition at line 473 of file IrcPool\&.h\&.
.PP
References _connections\&.
.PP
Referenced by IrcFactory::CreateIrcConnection(), IrcFactory::DeleteIrcObject(), and IrcParser::RunParser()\&.
.PP
.nf
474         {
475                 return &_connections;
476         }
.fi
.SS "\fBObjectPool\fP<\fBIrcNetwork\fP>* IrcPool::IrcNetworks ()\fC [inline]\fP"

.PP
Definition at line 464 of file bak/IrcPool\&.h\&.
.PP
References _networks\&.
.PP
.nf
465         { return &_networks; }
.fi
.SS "\fBObjectPool\fP<\fBIrcNetwork\fP>* const IrcPool::IrcNetworks ()\fC [inline]\fP"

.PP
Definition at line 479 of file IrcPool\&.h\&.
.PP
References _networks\&.
.PP
Referenced by IrcFactory::CreateIrcNetwork(), and IrcFactory::DeleteIrcObject()\&.
.PP
.nf
480         {
481                 return &_networks;
482         }
.fi
.SS "\fBObjectPool\fP<\fBIrcUser\fP>* IrcPool::IrcUsers ()\fC [inline]\fP"

.PP
Definition at line 466 of file bak/IrcPool\&.h\&.
.PP
References _users\&.
.PP
.nf
467         { return &_users; }
.fi
.SS "\fBObjectPool\fP<\fBIrcUser\fP>* const IrcPool::IrcUsers ()\fC [inline]\fP"

.PP
Definition at line 485 of file IrcPool\&.h\&.
.PP
References _users\&.
.PP
Referenced by IrcFactory::CreateIrcUser(), IrcFactory::DeleteIrcObject(), IrcChannel::DeleteUser(), and IrcChannel::EraseNameslist()\&.
.PP
.nf
486         { 
487                 return &_users; 
488         }
.fi
.SS "IrcPool::NO_CLASS_ASSIGNMENT (\fBIrcPool\fP)\fC [private]\fP"

.SS "IrcPool::NO_CLASS_ASSIGNMENT (\fBIrcPool\fP)\fC [private]\fP"

.SS "IrcPool::NO_CLASS_COPY (\fBIrcPool\fP)\fC [private]\fP"

.SS "IrcPool::NO_CLASS_COPY (\fBIrcPool\fP)\fC [private]\fP"

.SH "Friends And Related Function Documentation"
.PP 
.SS "\fBIrcEngine\fP\fC [friend]\fP"
we are created on the stack in \fBIrcEngine::Pools()\fP
.PP
we are created on the stack in IrcEngine::Pool() 
.PP
Definition at line 448 of file IrcPool\&.h\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBObjectPool\fP< \fBIrcChannel\fP > IrcPool::_channels\fC [private]\fP"

.PP
Definition at line 458 of file IrcPool\&.h\&.
.PP
Referenced by GetChannel(), and IrcChannels()\&.
.SS "\fBObjectPool\fP< \fBIrcConnection\fP > IrcPool::_connections\fC [private]\fP"

.PP
Definition at line 459 of file IrcPool\&.h\&.
.PP
Referenced by GetConnection(), and IrcConnections()\&.
.SS "\fBObjectPool\fP< \fBIrcNetwork\fP > IrcPool::_networks\fC [private]\fP"

.PP
Definition at line 460 of file IrcPool\&.h\&.
.PP
Referenced by GetNetwork(), and IrcNetworks()\&.
.SS "\fBObjectPool\fP< \fBIrcUser\fP > IrcPool::_users\fC [private]\fP"

.PP
Definition at line 457 of file IrcPool\&.h\&.
.PP
Referenced by GetUser(), and IrcUsers()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Social Bot Interface from the source code\&.
